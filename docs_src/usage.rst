Usage
=====

In order to use any of the feature available in the package the user need to generate
a CRYSTAL object through the crystal_io module. Three classes are available to the user
for different use cases:

#. **Crystal_output**: To extract informations and generate the object required to plot
   from any .out file of the CRYSTAL package.
#. **Properties_output**: To generate the objects required to plot any of quantities
   stored in the .DAT and .f25 files generated by the PROPERTIES module.
#. **External_unit**: To generate the objects required to plot any of the quantites stored
   in .DAT and .f25 file generated by CRYSTAL.

.. code-block:: python

   from CRYSTALClear.crystal_io import class
   #Crystal_output
   data = class(file).function(*args,**kwargs)
   #Properties_output and External_unit
   data = class().functione(file)

Once the object is generated the user can generate the desired plot using the functions
in the plot module

.. code-block:: python

   import CRYSTALClear.plot as CCplt
   CCplt.function(data,*args,**kwargs)

The function will return a `matplotlib object <mpl>`_ that the user can easily modify
as any other plot produced with the library.

.. _mpl: https://matplotlib.org/


